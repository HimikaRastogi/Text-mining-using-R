> library(twitteR)
> # retrieve the first 100 tweets (or all tweets if fewer than 100)
> # from the user timeline of @rdatammining
> rdmTweets <- userTimeline("rdatamining", n=100)
> n <- length(rdmTweets)
> df <- do.call("rbind", lapply(rdmTweets, as.data.frame))
> dim(df)
[1] 79 10

> library(tm)
> # build a corpus, which is a collection of text documents
> # VectorSource specifies that the source is character vectors.
> myCorpus <- Corpus(VectorSource(df$text))

> myCorpus <- tm_map(myCorpus, tolower)
> # remove punctuation
> myCorpus <- tm_map(myCorpus, removePunctuation)
> # remove numbers
> myCorpus <- tm_map(myCorpus, removeNumbers)
> # remove stopwords
> # keep "r" by removing it from stopwords
> myStopwords <- c(stopwords('english'), "available", "via")
> idx <- which(myStopwords == "r")
> myStopwords <- myStopwords[-idx]
> myCorpus <- tm_map(myCorpus, removeWords, myStopwords)

> dictCorpus <- myCorpus
> # stem words in a text document with the snowball stemmers,
> # which requires packages Snowball, RWeka, rJava, RWekajars
> myCorpus <- tm_map(myCorpus, stemDocument)
> # inspect the first three ``documents"
> inspect(myCorpus[1:3])
(Some details are removed to make it short. Same applies to inspect() below.)
[[1]]
text mine tutori httptcojphhlegm
[[2]]
r cookbook exampl httptcoavtiaseg
[[3]]
access amount twitter data data mine task r twitter packag httptcoapbabnx

> # stem completion
> myCorpus <- tm_map(myCorpus, stemCompletion, dictionary=dictCorpus)

> findFreqTerms(myDtm, lowfreq=10)
[1] "analysis" "data" "examples" "miners" "package" "r" "slides"
[8] "tutorial" "users"

> # which words are associated with "r"?
> findAssocs(myDtm, 'r', 0.30)
   r  users examples package canberra cran list
1.00   0.44     0.34    0.31     0.30 0.30 0.30

> # which words are associated with "mining"?
> # Here "miners" is used instead of "mining",
> # because the latter is stemmed and then completed to "miners". :-(
> findAssocs(myDtm, 'miners', 0.30)
miners data classification httptcogbnpv mahout
  1.00 0.56           0.47         0.47   0.47
recommendation sets supports frequent itemset
          0.47 0.47     0.47     0.40    0.39
